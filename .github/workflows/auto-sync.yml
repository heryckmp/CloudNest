name: Auto Sync

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      - name: Generate Smart Commit Message
        id: commit-message
        run: |
          # Detecta arquivos modificados
          MODIFIED_FILES=$(git diff --name-only HEAD)
          
          # Inicializa a mensagem de commit
          COMMIT_MSG="ü§ñ Auto-sync:\n\n"
          
          # Analisa cada tipo de altera√ß√£o
          if echo "$MODIFIED_FILES" | grep -q "\.md$"; then
            COMMIT_MSG+="üìù Docs: Atualiza√ß√£o na documenta√ß√£o\n"
          fi
          
          if echo "$MODIFIED_FILES" | grep -q "\.tsx\?$"; then
            COMMIT_MSG+="‚ú® Code: Atualiza√ß√£o nos componentes React/TypeScript\n"
          fi
          
          if echo "$MODIFIED_FILES" | grep -q "\.css$"; then
            COMMIT_MSG+="üé® Style: Atualiza√ß√£o no estilo\n"
          fi
          
          if echo "$MODIFIED_FILES" | grep -q "package.json\|package-lock.json"; then
            COMMIT_MSG+="üì¶ Deps: Atualiza√ß√£o nas depend√™ncias\n"
          fi
          
          if echo "$MODIFIED_FILES" | grep -q "\.env\|\.config"; then
            COMMIT_MSG+="‚öôÔ∏è Config: Atualiza√ß√£o nas configura√ß√µes\n"
          fi
          
          # Lista arquivos modificados
          COMMIT_MSG+="\nArquivos modificados:\n"
          COMMIT_MSG+=$(echo "$MODIFIED_FILES" | sed 's/^/- /')
          
          # Salva a mensagem para usar no pr√≥ximo passo
          echo "message<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_MSG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      
      - name: Auto Commit
        run: |
          git add .
          git diff --staged --quiet || git commit -m "${{ env.message }}"
          git push
        
      - name: Notify Success
        if: success()
        run: |
          echo "‚úÖ Sync completed successfully!"
          echo "Changes pushed to repository"
          
      - name: Notify Failure
        if: failure()
        run: |
          echo "‚ùå Sync failed!"
          echo "Please check the logs for more information" 